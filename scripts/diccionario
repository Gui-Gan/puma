
struct Diccionario {
  char ** palabra;
  int palabras;
}

struct Diccionario crea_diccionario(void) //Función
{
  struct Diccionario d;
  d.palabra = NULL;
  d.palabras = 0; // Define un elemento tipo diccionario vacío
  return d;
}

void inserta_palabra_en_diccionario (struct Diccionario *d, char pal[])
{
  int i;

  for (i=0; i<d->palabras; i++)
    if (strcmp(d->palabra[i]),pal)==0
      return; //No hacer nada si la palabra ya está en el Diccionario

  /* Aumenta en *d memoria para una palabra más */
  d->palabra = realloc (d->palabra, (d->palabras+1)*sizeof(char *))
  /*Habilita memoria en d[] para pal*/
  d->palabra[d->palabras] = malloc ((strlen(pal)+1)* sizeof (char))
  /* Copiar a la memoria*/
  strcpy (d-> palabra[d->palabras],pal);
  /* Declarar que hay una palabra */
  d->palabras++;
}


void borra_palabra_en_diccionario (struct Diccionario *d, char pal[])
{
  int i;

  for (i=0; i<d->palabras; i++)
    if (strcmp(d->palabra[i],pal)==0)
      free(d->palabra[i]);
}

void libera_diccionario (struct Diccionario *d)
{
  int i;

  if (d->palabra != NULL) {
    for (i=0; i<d->palabras; i++)
      free(d->palabra[i]);
    free (d->palabra);
    d->palabra=NULL;
    d->palabras=0;

  }
}
